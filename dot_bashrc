# If not running interactively, don't do anything
[[ $- != *i* ]] && return

export PATH=$PATH:$HOME/.local/bin

function _update_ps1() {
    PS1=$(powerline-shell $?)
}

if [[ $TERM != linux && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
fi

source $HOME/.config/custom-aliases.sh

alias ls='ls --color=auto'

export EDITOR=vim
export GPG_TTY=$(tty)

if [[ -f $HOME/.bw_session ]]; then
    source $HOME/.bw_session
fi
if [[ -d $HOME/.cargo ]]; then
    . "$HOME/.cargo/env"
fi
if [[ -d $HOME/.pyenv ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi

if [[ -r /usr/share/bash-completion/completions/python3 ]]; then
    . /usr/share/bash-completion/completions/python3 && complete -F _python python py
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/xiurobert/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/xiurobert/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/xiurobert/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/xiurobert/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

export PATH="$PATH:/home/xiurobert/.yarn/bin"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
